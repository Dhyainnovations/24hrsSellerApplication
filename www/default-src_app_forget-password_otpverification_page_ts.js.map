{"version":3,"file":"default-src_app_forget-password_otpverification_page_ts.js","mappings":"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","sources":["./src/app/forget-password/otpverification.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../shared/http.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-otpverification',\n  templateUrl: './otpverification.page.html',\n  styleUrls: ['./otpverification.page.scss'],\n})\nexport class OtpverificationPage implements OnInit {\n\n  constructor(public modalCtrl: ModalController,private router: Router, private http: HttpService,\n    private toastCtrl: ToastController, private route: ActivatedRoute,) { }\n\n  ngOnInit() {\n    this.OTPField = \"true\";\n    \n\n  }\n\n\n  intervalId = 0;\n  \n  otpseconds: any = \"60\";\n  clearTimer() { clearInterval(this.intervalId); }\n  start() { this.countDown(); }\n  stop() {\n    this.clearTimer();\n  }\n\n  private countDown() {\n    this.clearTimer();\n    this.intervalId = window.setInterval(() => {\n      this.otpseconds -= 1;\n      if (this.otpseconds === 0) {\n        this.clearTimer();\n        this.otpseconds = 0;\n      }\n    }, 1000);\n  }\n\n\n\n  SellerName: any;\n  PhoneNumber: any;\n  GetUserDetail = {};\n  OneTimePassword: any = \"\";\n  OTPSent: any = false;\n\n  ReSendOTP() {\n    this.start()\n    const obj = {\n      mobile_number: this.PhoneNumber\n    }\n    this.http.post('/seller_get_otp', obj).subscribe((response: any) => {\n      console.log(response);\n\n    }, (error: any) => {\n      console.log(error);\n    }\n    )\n  }\n  sellertbid: any;\n  PasswordField: any;\n  OTPVerificationStatus: any;\n\n\n  \n  async dismiss() {\n    await this.modalCtrl.dismiss();\n  }\n\n  verifyOTP() {\n    const obj = {\n      mobile_number: this.PhoneNumber,\n      verify_otp: this.OneTimePassword\n    }\n    this.http.post('/seller_verify_otp', obj).subscribe((response: any) => {\n      if (response.success == \"true\") {\n        this.sellertbid = response.tbid;\n        this.OTPVerificationStatus = \"true\";\n        this.PasswordField = true\n        this.OTPField = false\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n\n        Toast.fire({\n          icon: 'success',\n          title: 'OTP Verified Successfully'\n        })\n      } else {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n\n        Toast.fire({\n          icon: 'error',\n          title: 'Invalid OTP'\n        })\n      }\n\n    }, (error: any) => {\n      console.log(error);\n    }\n    )\n\n  }\n\n\n  NaviagtetoBack() {\n    this.dismiss();\n    this.router.navigate(['/signinpage'])\n  }\n  OTPField: any;\n  password: any;\n  confirmPassword: any;\n\n\n  confirmThePassword() {\n    if (this.OTPVerificationStatus == \"true\") {\n    if (this.password == this.confirmPassword) {\n    const obj = {\n          tbid: this.sellertbid,\n          confirm_password: this.password,\n          password: this.confirmPassword\n        }\n        console.log(obj);\n        \n        this.http.post('/seller_forget_pwd', obj).subscribe((response: any) => {\n          if (response.success == \"true\") {\n            console.log(response);\n            this.NaviagtetoBack()\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 1000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n              }\n            })\n\n            Toast.fire({\n              icon: 'success',\n              title: 'Password Successfully Changed'\n            })\n          }\n\n        }, (error: any) => {\n          console.log(error);\n        }\n        )\n      } else {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n\n        Toast.fire({\n          icon: 'error',\n          title: \"Password Does'nt Match\"\n        })\n      }\n    }\n\n\n  }\n\n  \n\n  ifOTPSent: any;\n\n  isOTPsent: any;\n  SendOTP() {\n    this.start()\n    setTimeout(() => {\n      this.enableResendOTP();\n    }, 60000)\n\n\n    const obj = {\n      mobile_number: this.PhoneNumber\n    }\n    this.http.post('/seller_get_otp', obj).subscribe((response: any) => {\n      if (response.success == \"true\") {\n        this.isOTPsent = true;\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n\n        Toast.fire({\n          icon: 'success',\n          title: 'OTP Sent To Your Mobile'\n        })\n      } else {\n        this.ifOTPSent = false;\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 1000,\n          timerProgressBar: true,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n\n        Toast.fire({\n          icon: 'error',\n          title: 'Mobile Not Exist'\n        })\n      }\n\n    }, (error: any) => {\n      console.log(error);\n    }\n    )\n\n  }\n\n  enableResendOTP() {\n    this.AfterSixtySeconds = true;\n  }\n  AfterSixtySeconds: any;\n\n\n  invalidAlert: any;\n  passwordRes: any;\n  pwLowercaseAlert: any;\n  pwUppercaseAlert: any;\n  pwNumberAlert: any;\n  pwMinimumAlert: any;\n  passwordValidation(pw) {\n    console.log(pw);\n    this.invalidAlert = false;\n\n    var lowerCaseLetters = /[a-z]/g;\n    this.passwordRes = (lowerCaseLetters.test(pw));\n\n    if (this.passwordRes) {\n      this.pwLowercaseAlert = false\n    } else {\n      this.pwLowercaseAlert = true\n    }\n\n\n    var upperCaseLetters = /[A-Z]/g;\n    this.passwordRes = (upperCaseLetters.test(pw));\n\n    if (this.passwordRes) {\n      this.pwUppercaseAlert = false\n    } else {\n      this.pwUppercaseAlert = true\n    }\n\n    var numbers = /[0-9]/g;\n    this.passwordRes = (numbers.test(pw));\n\n    if (this.passwordRes) {\n      this.pwNumberAlert = false\n    } else {\n      this.pwNumberAlert = true\n    }\n\n    if (pw.length >= 8) {\n      this.pwMinimumAlert = false\n    } else {\n      this.pwMinimumAlert = true\n    }\n\n    return numbers.test(pw);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}