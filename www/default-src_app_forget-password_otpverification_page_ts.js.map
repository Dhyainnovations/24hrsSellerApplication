{"version":3,"file":"default-src_app_forget-password_otpverification_page_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAkD;AACG;AACZ;AACV;AACkB;AACA;AACA;IAQpC,mBAAmB,SAAnB,mBAAmB;IAE9B,YAAmB,SAA0B,EAAS,MAAc,EAAU,IAAiB,EACrF,SAA0B,EAAU,KAAqB;QADhD,cAAS,GAAT,SAAS,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QACrF,cAAS,GAAT,SAAS,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAUnE,kBAAa,GAAG,EAAE,CAAC;QACnB,oBAAe,GAAQ,EAAE,CAAC;QAC1B,YAAO,GAAQ,KAAK,CAAC;IAZmD,CAAC;IAEzE,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IAEzB,CAAC;IASD,SAAS;QACP,MAAM,GAAG,GAAG;YACV,aAAa,EAAE,IAAI,CAAC,WAAW;SAChC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAExB,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA;IACH,CAAC;IAOK,OAAO;;YACX,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC;KAAA;IAED,SAAS;QACP,MAAM,GAAG,GAAG;YACV,aAAa,EAAE,IAAI,CAAC,WAAW;YAC/B,UAAU,EAAE,IAAI,CAAC,eAAe;SACjC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACpE,IAAI,QAAQ,CAAC,OAAO,IAAI,MAAM,EAAE;gBAC9B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAChC,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;gBACpC,IAAI,CAAC,aAAa,GAAG,IAAI;gBACzB,IAAI,CAAC,QAAQ,GAAG,KAAK;gBACrB,MAAM,KAAK,GAAG,wDAAU,CAAC;oBACvB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,SAAS;oBACnB,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;oBACX,gBAAgB,EAAE,IAAI;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;wBACjB,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,8DAAc,CAAC;wBACpD,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,gEAAgB,CAAC;oBACxD,CAAC;iBACF,CAAC;gBAEF,KAAK,CAAC,IAAI,CAAC;oBACT,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,2BAA2B;iBACnC,CAAC;aACH;iBAAM;gBACL,MAAM,KAAK,GAAG,wDAAU,CAAC;oBACvB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,SAAS;oBACnB,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;oBACX,gBAAgB,EAAE,IAAI;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;wBACjB,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,8DAAc,CAAC;wBACpD,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,gEAAgB,CAAC;oBACxD,CAAC;iBACF,CAAC;gBAEF,KAAK,CAAC,IAAI,CAAC;oBACT,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,aAAa;iBACrB,CAAC;aACH;QAEH,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA;IAEH,CAAC;IAGD,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC;IAC9E,CAAC;IAMD,kBAAkB;QAChB,IAAI,IAAI,CAAC,qBAAqB,IAAI,MAAM,EAAE;YAC1C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,EAAE;gBAC3C,MAAM,GAAG,GAAG;oBACN,IAAI,EAAE,IAAI,CAAC,UAAU;oBACrB,gBAAgB,EAAE,IAAI,CAAC,QAAQ;oBAC/B,QAAQ,EAAE,IAAI,CAAC,eAAe;iBAC/B;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAEjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBACpE,IAAI,QAAQ,CAAC,OAAO,IAAI,MAAM,EAAE;wBAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACtB,IAAI,CAAC,cAAc,EAAE;wBACrB,MAAM,KAAK,GAAG,wDAAU,CAAC;4BACvB,KAAK,EAAE,IAAI;4BACX,QAAQ,EAAE,SAAS;4BACnB,iBAAiB,EAAE,KAAK;4BACxB,KAAK,EAAE,IAAI;4BACX,gBAAgB,EAAE,IAAI;4BACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gCACjB,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,8DAAc,CAAC;gCACpD,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,gEAAgB,CAAC;4BACxD,CAAC;yBACF,CAAC;wBAEF,KAAK,CAAC,IAAI,CAAC;4BACT,IAAI,EAAE,SAAS;4BACf,KAAK,EAAE,+BAA+B;yBACvC,CAAC;qBACH;gBAEH,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;oBAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CACA;aACF;iBAAM;gBACL,MAAM,KAAK,GAAG,wDAAU,CAAC;oBACvB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,SAAS;oBACnB,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;oBACX,gBAAgB,EAAE,IAAI;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;wBACjB,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,8DAAc,CAAC;wBACpD,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,gEAAgB,CAAC;oBACxD,CAAC;iBACF,CAAC;gBAEF,KAAK,CAAC,IAAI,CAAC;oBACT,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,wBAAwB;iBAChC,CAAC;aACH;SACF;IAGH,CAAC;IAKD,OAAO;QACL,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EAAE,KAAK,CAAC;QAGT,MAAM,GAAG,GAAG;YACV,aAAa,EAAE,IAAI,CAAC,WAAW;SAChC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACjE,IAAI,QAAQ,CAAC,OAAO,IAAI,MAAM,EAAE;gBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,MAAM,KAAK,GAAG,wDAAU,CAAC;oBACvB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,SAAS;oBACnB,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;oBACX,gBAAgB,EAAE,IAAI;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;wBACjB,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,8DAAc,CAAC;wBACpD,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,gEAAgB,CAAC;oBACxD,CAAC;iBACF,CAAC;gBAEF,KAAK,CAAC,IAAI,CAAC;oBACT,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,yBAAyB;iBACjC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,MAAM,KAAK,GAAG,wDAAU,CAAC;oBACvB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,SAAS;oBACnB,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,IAAI;oBACX,gBAAgB,EAAE,IAAI;oBACtB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;wBACjB,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,8DAAc,CAAC;wBACpD,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,gEAAgB,CAAC;oBACxD,CAAC;iBACF,CAAC;gBAEF,KAAK,CAAC,IAAI,CAAC;oBACT,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,kBAAkB;iBAC1B,CAAC;aACH;QAEH,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA;IAEH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAUD,kBAAkB,CAAC,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,gBAAgB,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,gBAAgB,GAAG,KAAK;SAC9B;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI;SAC7B;QAGD,IAAI,gBAAgB,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,gBAAgB,GAAG,KAAK;SAC9B;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI;SAC7B;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,KAAK;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI;SAC1B;QAED,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;YAClB,IAAI,CAAC,cAAc,GAAG,KAAK;SAC5B;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,IAAI;SAC3B;QAED,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;CAEF;;YAvRQ,2DAAe;YAJf,mDAAM;YADN,6DAAW;YAGX,2DAAe;YACf,2DAAc;;AASV,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4EAA0C;;KAE3C,CAAC;GACW,mBAAmB,CA+Q/B;AA/Q+B","sources":["./src/app/forget-password/otpverification.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../shared/http.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\n\r\n@Component({\r\n  selector: 'app-otpverification',\r\n  templateUrl: './otpverification.page.html',\r\n  styleUrls: ['./otpverification.page.scss'],\r\n})\r\nexport class OtpverificationPage implements OnInit {\r\n\r\n  constructor(public modalCtrl: ModalController,private router: Router, private http: HttpService,\r\n    private toastCtrl: ToastController, private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit() {\r\n    this.OTPField = \"true\";\r\n\r\n  }\r\n\r\n\r\n  SellerName: any;\r\n  PhoneNumber: any;\r\n  GetUserDetail = {};\r\n  OneTimePassword: any = \"\";\r\n  OTPSent: any = false;\r\n\r\n  ReSendOTP() {\r\n    const obj = {\r\n      mobile_number: this.PhoneNumber\r\n    }\r\n    this.http.post('/seller_get_otp', obj).subscribe((response: any) => {\r\n      console.log(response);\r\n\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    )\r\n  }\r\n  sellertbid: any;\r\n  PasswordField: any;\r\n  OTPVerificationStatus: any;\r\n\r\n\r\n  \r\n  async dismiss() {\r\n    await this.modalCtrl.dismiss();\r\n  }\r\n\r\n  verifyOTP() {\r\n    const obj = {\r\n      mobile_number: this.PhoneNumber,\r\n      verify_otp: this.OneTimePassword\r\n    }\r\n    this.http.post('/seller_verify_otp', obj).subscribe((response: any) => {\r\n      if (response.success == \"true\") {\r\n        this.sellertbid = response.tbid;\r\n        this.OTPVerificationStatus = \"true\";\r\n        this.PasswordField = true\r\n        this.OTPField = false\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        })\r\n\r\n        Toast.fire({\r\n          icon: 'success',\r\n          title: 'OTP Verified Successfully'\r\n        })\r\n      } else {\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        })\r\n\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: 'Invalid OTP'\r\n        })\r\n      }\r\n\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    )\r\n\r\n  }\r\n\r\n\r\n  NaviagtetoBack() {\r\n    this.router.navigate((['/signinpage']), { queryParams: { checkbox: true } })\r\n  }\r\n  OTPField: any;\r\n  password: any;\r\n  confirmPassword: any;\r\n\r\n\r\n  confirmThePassword() {\r\n    if (this.OTPVerificationStatus == \"true\") {\r\n    if (this.password == this.confirmPassword) {\r\n    const obj = {\r\n          tbid: this.sellertbid,\r\n          confirm_password: this.password,\r\n          password: this.confirmPassword\r\n        }\r\n        console.log(obj);\r\n        \r\n        this.http.post('/seller_forget_pwd', obj).subscribe((response: any) => {\r\n          if (response.success == \"true\") {\r\n            console.log(response);\r\n            this.NaviagtetoBack()\r\n            const Toast = Swal.mixin({\r\n              toast: true,\r\n              position: 'top-end',\r\n              showConfirmButton: false,\r\n              timer: 1000,\r\n              timerProgressBar: true,\r\n              didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n              }\r\n            })\r\n\r\n            Toast.fire({\r\n              icon: 'success',\r\n              title: 'Password Successfully Changed'\r\n            })\r\n          }\r\n\r\n        }, (error: any) => {\r\n          console.log(error);\r\n        }\r\n        )\r\n      } else {\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        })\r\n\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: \"Password Does'nt Match\"\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  ifOTPSent: any;\r\n\r\n  isOTPsent: any;\r\n  SendOTP() {\r\n    setTimeout(() => {\r\n      this.enableResendOTP();\r\n    }, 60000)\r\n\r\n\r\n    const obj = {\r\n      mobile_number: this.PhoneNumber\r\n    }\r\n    this.http.post('/seller_get_otp', obj).subscribe((response: any) => {\r\n      if (response.success == \"true\") {\r\n        this.isOTPsent = true;\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        })\r\n\r\n        Toast.fire({\r\n          icon: 'success',\r\n          title: 'OTP Sent To Your Mobile'\r\n        })\r\n      } else {\r\n        this.ifOTPSent = false;\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        })\r\n\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: 'Mobile Not Exist'\r\n        })\r\n      }\r\n\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    )\r\n\r\n  }\r\n\r\n  enableResendOTP() {\r\n    this.AfterSixtySeconds = true;\r\n  }\r\n  AfterSixtySeconds: any;\r\n\r\n\r\n  invalidAlert: any;\r\n  passwordRes: any;\r\n  pwLowercaseAlert: any;\r\n  pwUppercaseAlert: any;\r\n  pwNumberAlert: any;\r\n  pwMinimumAlert: any;\r\n  passwordValidation(pw) {\r\n    console.log(pw);\r\n    this.invalidAlert = false;\r\n\r\n    var lowerCaseLetters = /[a-z]/g;\r\n    this.passwordRes = (lowerCaseLetters.test(pw));\r\n\r\n    if (this.passwordRes) {\r\n      this.pwLowercaseAlert = false\r\n    } else {\r\n      this.pwLowercaseAlert = true\r\n    }\r\n\r\n\r\n    var upperCaseLetters = /[A-Z]/g;\r\n    this.passwordRes = (upperCaseLetters.test(pw));\r\n\r\n    if (this.passwordRes) {\r\n      this.pwUppercaseAlert = false\r\n    } else {\r\n      this.pwUppercaseAlert = true\r\n    }\r\n\r\n    var numbers = /[0-9]/g;\r\n    this.passwordRes = (numbers.test(pw));\r\n\r\n    if (this.passwordRes) {\r\n      this.pwNumberAlert = false\r\n    } else {\r\n      this.pwNumberAlert = true\r\n    }\r\n\r\n    if (pw.length >= 8) {\r\n      this.pwMinimumAlert = false\r\n    } else {\r\n      this.pwMinimumAlert = true\r\n    }\r\n\r\n    return numbers.test(pw);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}