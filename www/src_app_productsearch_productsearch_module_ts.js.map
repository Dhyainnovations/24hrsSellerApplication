{"version":3,"file":"src_app_productsearch_productsearch_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEE;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAiB;KAC7B;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACF;AAEA;AAEmC;AAEvB;IAW5C,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IATnC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yFAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,kEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBc;AACG;AAEZ;AACQ;AACA;IAMpC,iBAAiB,SAAjB,iBAAiB;IAG5B,YAAoB,MAAc,EAAU,IAAiB,EACnD,SAA0B,EAAE,KAAqB;QADvC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QACnD,cAAS,GAAT,SAAS,CAAiB;QAQpC,iBAAY,GAAQ,EAAE,CAAC;QAmBvB,oBAAe,GAAQ,IAAI,CAAC;QAC5B,iBAAY,GAAG,EAAE,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QACjB,uBAAkB,GAAG,EAAE,CAAC;QACxB,SAAI,GAAQ,EAAE,CAAC;QACf,SAAI,GAAQ,EAAE,CAAC;QACf,SAAI,GAAQ,EAAE,CAAC;IA/Bf,CAAC;IAED,QAAQ;IACR,CAAC;IAID,aAAa;QACX,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;aAC1D;QACH,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA,CAAC;IACJ,CAAC;IAcD,SAAS;QACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAEzB,CAAC;IAEA,aAAa;IACb,YAAY;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,IAAI,CAAC;QACb,IAAI,YAAY,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAClE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;YACtD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YACpD,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAC1D,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU;QAEjD,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA,CAAC;IACJ,CAAC;IAID,oBAAoB;QAClB,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACpE,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YAC/H,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACA,CAAC;IACJ,CAAC;IACD,UAAU;QACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC;CACF;;YApGQ,mDAAM;YAFN,6DAAW;YAGX,2DAAe;YACf,2DAAc;;AAMV,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,0EAAwC;;KAEzC,CAAC;GACW,iBAAiB,CA4F7B;AA5F6B;;;;;;;;;;;;;;;;;;;;ACXa;AACoB;AACF;IAKhD,WAAW,SAAX,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IACzC,GAAG,CAAC,WAAmB;QACrB,MAAM,WAAW,GAAQ,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,0EAAmB,GAAG,WAAW,CAAC;QAC9C,MAAM,MAAM,GAAG,IAAI,6DAAW,EAAE;YAC9B,2CAA2C;YAC3C,mDAAmD;YACnD,oCAAoC;YACpC,0CAA0C;YAC1C,6HAA6H;aAC5H,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC7B,wBAAwB;QACxB,iCAAiC;QACjC,4CAA4C;QAC5C,6CAA6C;QAC7C,6HAA6H;QAC7H,2CAA2C;QAC3C,2CAA2C;QAE3C,SAAS;QACT,KAAK;QAEL,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,IAAI,CAAC,WAAgB,EAAE,IAAS;QAC9B,MAAM,KAAK,GAAQ,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAGrD,MAAM,GAAG,GAAG,0EAAmB,GAAG,WAAW,CAAC;QAC9C,IAAI,WAAW,IAAI,eAAe,IAAI,WAAW,IAAI,kBAAkB,IAAI,WAAW,IAAI,iBAAiB,IAAI,WAAW,IAAI,oBAAoB,IAAI,oBAAoB,EAAG;YAC3K,MAAM,OAAO,GAAG,IAAI,6DAAW,EAAE;YACjC,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC;YAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;SACxE;aAAM,EAIN;IAIH,CAAC;IAED,YAAY,CAAC,WAAgB,EAAE,IAAS;QACtC,MAAM,KAAK,GAAQ,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,0EAAmB,GAAG,WAAW,CAAC;QAE9C,MAAM,OAAO,GAAG;YACd,oCAAoC;YACpC,yCAAyC;YACzC,0BAA0B;YAC1B,sCAAsC;YACtC,6DAA6D;YAC7D,uFAAuF;YACvF,OAAO,EAAE,KAAK;SACf;QAED,0DAA0D;QAC1D,wDAAwD;QACxD,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAEzD,CAAC;CAEF;;YA1EQ,4DAAU;;AAMN,WAAW;IAHvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAoEvB;AApEuB","sources":["./src/app/productsearch/productsearch-routing.module.ts","./src/app/productsearch/productsearch.module.ts","./src/app/productsearch/productsearch.page.ts","./src/app/shared/http.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProductsearchPage } from './productsearch.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsearchPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProductsearchPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProductsearchPageRoutingModule } from './productsearch-routing.module';\r\n\r\nimport { ProductsearchPage } from './productsearch.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ProductsearchPageRoutingModule\r\n  ],\r\n  declarations: [ProductsearchPage]\r\n})\r\nexport class ProductsearchPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../shared/http.service';\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-productsearch',\r\n  templateUrl: './productsearch.page.html',\r\n  styleUrls: ['./productsearch.page.scss'],\r\n})\r\nexport class ProductsearchPage implements OnInit {\r\n  storeName: any;\r\n\r\n  constructor(private router: Router, private http: HttpService,\r\n    private toastCtrl: ToastController, route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  productName: any;\r\n  ShowProducts: any = [];\r\n  searchProduct() {\r\n    this.productShowname = true;\r\n    this.productShowDetail = false;\r\n    var s = this.productName;\r\n    this.ShowProducts = [];\r\n    this.http.get('/search_product?s=' + s).subscribe((response: any) => {\r\n      for (var i = 0; i <= response.records.length; i++) {\r\n        console.log(response.records[i].product_name);\r\n        this.ShowProducts.push(response.records[i].product_name);\r\n      }\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  productShowname: any = true;\r\n  productImage = \"\";\r\n  productname = \"\";\r\n  productdescription = \"\";\r\n  cost: any = \"\";\r\n  unit: any = \"\";\r\n  tbid: any = \"\";\r\n  productShowDetail: any;\r\n\r\n\r\n  clearData() {\r\n    this.productName = \" \";\r\n\r\n  }\r\n\r\n   //Naviagtions\r\n   notification() {\r\n    this.router.navigate(['/notification'])\r\n  }\r\n\r\n  productDetail(data) {\r\n    console.log(data);\r\n    var s = data;\r\n    var product_name;\r\n    this.http.get('/search_product?s=' + s).subscribe((response: any) => {\r\n      this.productShowname = false;\r\n      this.productShowDetail = true;\r\n      console.log(response);\r\n      this.productImage = response.records[0].product_image;\r\n      this.productname = response.records[0].product_name;\r\n      this.productdescription = response.records[0].description;\r\n      this.cost = response.records[0].cost;\r\n      this.unit = response.records[0].unit;\r\n      this.storeName = response.records[0].store_name\r\n\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    );\r\n  }\r\n\r\n  displayReadData: any;\r\n  showReadData: any;\r\n  RedirectToOneProduct() {\r\n    const p = this.productname;\r\n    console.log(p);\r\n    this.http.get('/read_one_product?p=' + p).subscribe((response: any) => {\r\n      this.displayReadData = response.records.tbid;\r\n      this.showReadData = response.records.product_name;\r\n      this.router.navigate(['/myproductEditPage'], { queryParams: { tbid: this.displayReadData, product_name: this.showReadData } });\r\n      this.productName = \"\";\r\n      this.productShowDetail = false;\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    );\r\n  }\r\n  backToHome() {\r\n    this.productShowDetail = false;\r\n    this.router.navigate(['/myproducts'])\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  get(serviceName: string) {\r\n    const userdetails: any = localStorage.getItem(\"token\");\r\n    const url = environment.baseUrl + serviceName;\r\n    const header = new HttpHeaders()\r\n      // .set(\"Access-Control-Allow-Origin\", \"*\")\r\n      // .set(\"Access-Control-Allow-Methods\", \"GET,POST\")\r\n      // .set('Accept','application/json')\r\n      // .set('Content-Type','application/json')\r\n      // .set(\"Access-Control-Allow-Headers\", \"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\")\r\n      .set(\"Token\", userdetails);\r\n    //   let httpOptions = {\r\n    //     headers: new HttpHeaders({\r\n    //       \"Access-Control-Allow-Origin\": \"*\",\r\n    //       \"Access-Control-Allow-Methods\": \"*\",\r\n    //       \"Access-Control-Allow-Headers\":\"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\r\n    //       'Authorization':userdetails.token,\r\n    //       \"Content-Type\": \"application/json\"\r\n\r\n    //     })\r\n    // };\r\n\r\n    const options = { headers: header, withCredentials: true };\r\n    return this.http.get(url, { headers: header });\r\n  }\r\n\r\n  post(serviceName: any, data: any): any {\r\n    const token: any = ((localStorage.getItem(\"token\")));\r\n\r\n\r\n    const url = environment.baseUrl + serviceName;\r\n    if (serviceName == '/seller_login' || serviceName == '/seller_register' || serviceName == '/seller_get_otp' || serviceName == '/seller_verify_otp' || '/seller_forget_pwd' ) {\r\n      const headers = new HttpHeaders()\r\n      const options = { headers: headers, withCredentials: false };\r\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\r\n    } else {\r\n      const headers = new HttpHeaders().set(\"Token\", token);\r\n      const options = { headers: headers, withCredentials: true };\r\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  postFormData(serviceName: any, data: any): any {\r\n    const token: any = ((localStorage.getItem(\"token\")));\r\n    const url = environment.baseUrl + serviceName;\r\n\r\n    const headers = {\r\n      // 'enctype': 'multipart/form-data',\r\n      // 'Content-Type': 'multipart/form-data',\r\n      // 'Accept': 'plain/text',\r\n      // 'Access-Control-Allow-Origin': '*',\r\n      // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT',\r\n      // 'Access-Control-Allow-Headers': 'Authorization, Origin, Content-Type, X-CSRF-Token',\r\n      'Token': token\r\n    }\r\n\r\n    // const headers = new HttpHeaders().set(\"Token\", token );\r\n    //  headers.set('Content-Type', 'multipart/form-data'); \r\n    const options = { headers: headers, withCredentials: true };\r\n    return this.http.post(url, data, { headers: headers });\r\n\r\n  }\r\n\r\n}"],"names":[],"sourceRoot":"webpack:///"}