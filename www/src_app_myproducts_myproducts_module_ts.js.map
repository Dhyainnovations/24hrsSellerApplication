{"version":3,"file":"src_app_myproducts_myproducts_module_ts.js","mappings":"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","sources":["./src/app/myproducts/myproducts-routing.module.ts","./src/app/myproducts/myproducts.module.ts","./src/app/myproducts/myproducts.page.ts","./src/app/shared/http.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MyproductsPage } from './myproducts.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MyproductsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MyproductsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MyproductsPageRoutingModule } from './myproducts-routing.module';\r\n\r\nimport { MyproductsPage } from './myproducts.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MyproductsPageRoutingModule\r\n  ],\r\n  declarations: [MyproductsPage]\r\n})\r\nexport class MyproductsPageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpService } from '../shared/http.service';\r\n\r\n@Component({\r\n  selector: 'app-myproducts',\r\n  templateUrl: './myproducts.page.html',\r\n  styleUrls: ['./myproducts.page.scss'],\r\n})\r\nexport class MyproductsPage implements OnInit {\r\n  constructor(private http: HttpService, private router: Router, private route: ActivatedRoute) {\r\n    route.params.subscribe(val => {\r\n      this.ProductList()\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  userdetails: any = atob(localStorage.getItem(\"24hrs-user-data\"));\r\n  noProducts: any = false;\r\n  showReadData: any = \"\"\r\n  productlist: any = [];\r\n  displayReadData: any = \"\";\r\n  exit() {\r\n    this.router.navigate(['/tabs'])\r\n  }\r\n\r\n  \r\n\r\n  NavigatetoNotification() {\r\n    this.router.navigate(['/notification'])\r\n  }\r\n\r\n\r\n  ProductList() {\r\n    this.http.get('/read_all_product',).subscribe((response: any) => {\r\n      console.log(response.records);\r\n\r\n      this.productlist = response.records;\r\n      this.noProducts = false;\r\n\r\n    }, (error: any) => {\r\n      console.log(error);\r\n      this.noProducts = true;\r\n      this.productlist=[];\r\n    }\r\n    );\r\n  }\r\n\r\n  navigatetoaddoffer(productname){\r\n    this.router.navigate(['/add-product-offer'], { queryParams: { product_name: productname } });\r\n  }\r\n\r\n  editDetails(product_name) {\r\n    const p = product_name;\r\n    console.log(p);\r\n    this.http.get('/read_one_product?p=' + p).subscribe((response: any) => {\r\n      this.displayReadData = response.records.tbid;\r\n      this.showReadData = response.records.product_name;\r\n      this.router.navigate(['/myproductEditPage'], { queryParams: { tbid: this.displayReadData, product_name: this.showReadData } });\r\n    }, (error: any) => {\r\n      console.log(error);\r\n    }\r\n    );\r\n  }\r\n\r\n  searchPage() {\r\n    this.router.navigate(['/searchpage'])\r\n  }\r\n\r\n  navigateTo() {\r\n    this.router.navigate(['/tabs/tab3'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  get(serviceName: string) {\r\n    const userdetails: any = localStorage.getItem(\"token\");\r\n    const url = environment.baseUrl + serviceName;\r\n    const header = new HttpHeaders()\r\n      // .set(\"Access-Control-Allow-Origin\", \"*\")\r\n      // .set(\"Access-Control-Allow-Methods\", \"GET,POST\")\r\n      // .set('Accept','application/json')\r\n      // .set('Content-Type','application/json')\r\n      // .set(\"Access-Control-Allow-Headers\", \"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\")\r\n      .set(\"Token\", userdetails);\r\n    //   let httpOptions = {\r\n    //     headers: new HttpHeaders({\r\n    //       \"Access-Control-Allow-Origin\": \"*\",\r\n    //       \"Access-Control-Allow-Methods\": \"*\",\r\n    //       \"Access-Control-Allow-Headers\":\"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\r\n    //       'Authorization':userdetails.token,\r\n    //       \"Content-Type\": \"application/json\"\r\n\r\n    //     })\r\n    // };\r\n\r\n    const options = { headers: header, withCredentials: true };\r\n    return this.http.get(url, { headers: header });\r\n  }\r\n\r\n  post(serviceName: any, data: any): any {\r\n    const token: any = ((localStorage.getItem(\"token\")));\r\n\r\n\r\n    const url = environment.baseUrl + serviceName;\r\n    if (serviceName == '/seller_login' || serviceName == '/seller_register' || serviceName == '/seller_get_otp' || serviceName == '/seller_verify_otp' || '/seller_forget_pwd' ) {\r\n      const headers = new HttpHeaders()\r\n      const options = { headers: headers, withCredentials: false };\r\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\r\n    } else {\r\n      const headers = new HttpHeaders().set(\"Token\", token);\r\n      const options = { headers: headers, withCredentials: true };\r\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  postFormData(serviceName: any, data: any): any {\r\n    const token: any = ((localStorage.getItem(\"token\")));\r\n    const url = environment.baseUrl + serviceName;\r\n\r\n    const headers = {\r\n      // 'enctype': 'multipart/form-data',\r\n      // 'Content-Type': 'multipart/form-data',\r\n      // 'Accept': 'plain/text',\r\n      // 'Access-Control-Allow-Origin': '*',\r\n      // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT',\r\n      // 'Access-Control-Allow-Headers': 'Authorization, Origin, Content-Type, X-CSRF-Token',\r\n      'Token': token\r\n    }\r\n\r\n    // const headers = new HttpHeaders().set(\"Token\", token );\r\n    //  headers.set('Content-Type', 'multipart/form-data'); \r\n    const options = { headers: headers, withCredentials: true };\r\n    return this.http.post(url, data, { headers: headers });\r\n\r\n  }\r\n\r\n}"],"names":[],"sourceRoot":"webpack:///"}