{"version":3,"file":"src_app_productsearch_productsearch_module_ts.js","mappings":"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","sources":["./src/app/productsearch/productsearch-routing.module.ts","./src/app/productsearch/productsearch.module.ts","./src/app/productsearch/productsearch.page.ts","./src/app/shared/http.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductsearchPage } from './productsearch.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsearchPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductsearchPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductsearchPageRoutingModule } from './productsearch-routing.module';\n\nimport { ProductsearchPage } from './productsearch.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProductsearchPageRoutingModule\n  ],\n  declarations: [ProductsearchPage]\n})\nexport class ProductsearchPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../shared/http.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-productsearch',\n  templateUrl: './productsearch.page.html',\n  styleUrls: ['./productsearch.page.scss'],\n})\nexport class ProductsearchPage implements OnInit {\n  storeName: any;\n  weight: any;\n\n  constructor(private router: Router, private http: HttpService,\n    private toastCtrl: ToastController, route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  productName: any;\n  ShowProducts: any = [];\n  searchProduct() {\n    this.productShowname = true;\n    this.productShowDetail = false;\n    var s = this.productName;\n    this.ShowProducts = [];\n    this.http.get('/search_product?s=' + s).subscribe((response: any) => {\n      for (var i = 0; i <= response.records.length; i++) {\n        console.log(response.records[i].product_name);\n        this.ShowProducts.push(response.records[i].product_name);\n      }\n    }, (error: any) => {\n      console.log(error);\n    }\n    );\n  }\n\n\n\n  productShowname: any = true;\n  productImage = \"\";\n  productname = \"\";\n  productdescription = \"\";\n  cost: any = \"\";\n  unit: any = \"\";\n  tbid: any = \"\";\n  productShowDetail: any;\n\n\n  clearData() {\n    this.productName = \" \";\n    this.productShowDetail = false\n\n  }\n\n   //Naviagtions\n   notification() {\n    this.router.navigate(['/notification'])\n  }\n\n  productDetail(data) {\n    console.log(data);\n    var s = data;\n    var product_name;\n    this.http.get('/search_product?s=' + s).subscribe((response: any) => {\n      this.productShowname = false;\n      this.productShowDetail = true;\n      console.log(response);\n      this.productImage = response.records[0].product_image;\n      this.productname = response.records[0].product_name;\n      this.productdescription = response.records[0].description;\n      this.cost = response.records[0].cost;\n      this.unit = response.records[0].unit;\n      this.storeName = response.records[0].store_name;\n      this.weight = response.records[0].weight\n\n    }, (error: any) => {\n      console.log(error);\n    }\n    );\n  }\n\n  displayReadData: any;\n  showReadData: any;\n  RedirectToOneProduct() {\n    const p = this.productname;\n    console.log(p);\n    this.http.get('/read_one_product?p=' + p).subscribe((response: any) => {\n      this.displayReadData = response.records.tbid;\n      this.showReadData = response.records.product_name;\n      this.router.navigate(['/myproductEditPage'], { queryParams: { tbid: this.displayReadData, product_name: this.showReadData } });\n      this.productName = \"\";\n      this.productShowDetail = false;\n    }, (error: any) => {\n      console.log(error);\n    }\n    );\n  }\n  backToHome() {\n    this.productShowDetail = false;\n    this.router.navigate(['/myproducts'])\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n  get(serviceName: string) {\n    const userdetails: any = localStorage.getItem(\"token\");\n    const url = environment.baseUrl + serviceName;\n    const header = new HttpHeaders()\n      // .set(\"Access-Control-Allow-Origin\", \"*\")\n      // .set(\"Access-Control-Allow-Methods\", \"GET,POST\")\n      // .set('Accept','application/json')\n      // .set('Content-Type','application/json')\n      // .set(\"Access-Control-Allow-Headers\", \"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\")\n      .set(\"Token\", userdetails);\n    //   let httpOptions = {\n    //     headers: new HttpHeaders({\n    //       \"Access-Control-Allow-Origin\": \"*\",\n    //       \"Access-Control-Allow-Methods\": \"*\",\n    //       \"Access-Control-Allow-Headers\":\"Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n    //       'Authorization':userdetails.token,\n    //       \"Content-Type\": \"application/json\"\n\n    //     })\n    // };\n\n    const options = { headers: header, withCredentials: true };\n    return this.http.get(url, { headers: header });\n  }\n\n  post(serviceName: any, data: any): any {\n    const token: any = ((localStorage.getItem(\"token\")));\n\n\n    const url = environment.baseUrl + serviceName;\n    if (serviceName == '/seller_login' || serviceName == '/seller_register' || serviceName == '/seller_get_otp' || serviceName == '/seller_verify_otp' || '/seller_forget_pwd' ) {\n      const headers = new HttpHeaders()\n      const options = { headers: headers, withCredentials: false };\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\n    } else {\n      const headers = new HttpHeaders().set(\"Token\", token);\n      const options = { headers: headers, withCredentials: true };\n      return this.http.post(url, JSON.stringify(data), { headers: headers });\n    }\n\n\n\n  }\n\n  postFormData(serviceName: any, data: any): any {\n    const token: any = ((localStorage.getItem(\"token\")));\n    const url = environment.baseUrl + serviceName;\n\n    const headers = {\n      // 'enctype': 'multipart/form-data',\n      // 'Content-Type': 'multipart/form-data',\n      // 'Accept': 'plain/text',\n      // 'Access-Control-Allow-Origin': '*',\n      // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT',\n      // 'Access-Control-Allow-Headers': 'Authorization, Origin, Content-Type, X-CSRF-Token',\n      'Token': token\n    }\n\n    // const headers = new HttpHeaders().set(\"Token\", token );\n    //  headers.set('Content-Type', 'multipart/form-data'); \n    const options = { headers: headers, withCredentials: true };\n    return this.http.post(url, data, { headers: headers });\n\n  }\n\n}"],"names":[],"sourceRoot":"webpack:///"}